# Database - Using your Neon database
DATABASE_URL=
GOOGLE_CLIENT_SECRET=
GOOGLE_CLIENT_ID=
NEXT_PUBLIC_UPLOADTHING_APP_ID=
CRON_SECRET=
UPLOADTHING_SECRET=
NEXT_PUBLIC_BASE_URL=
STREAM_SECRET=
NEXT_PUBLIC_STREAM_KEY=
POSTGRES_DATABASE=
POSTGRES_HOST=
POSTGRES_PASSWORD=
POSTGRES_USER=
POSTGRES_PRISMA_URL=
POSTGRES_URL_NO_SSL=
POSTGRES_URL_NON_POOLING=
POSTGRES_URL=

# Local Database for Docker (fallback)
DB_NAME=
DB_USER=
DB_PASSWORD=

# Auth0 (use dummy values for development)
AUTH0_DOMAIN=
AUTH0_CLIENT_ID=
AUTH0_CLIENT_SECRET=

# Stripe (use test keys)
STRIPE_SECRET_KEY=
# STRIPE_PUBLISHABLE_KEY=pk_test_dummy_key
STRIPE_WEBHOOK_SECRET=
# Redis
REDIS_URL=

# RabbitMQ
RABBITMQ_URL=
RABBITMQ_USER=
RABBITMQ_PASSWORD=

# Elasticsearch
ELASTICSEARCH_URL=

# API URLs
API_URL=
USERS_SERVICE_URL=
ORDERS_SERVICE_URL=
PAYMENTS_SERVICE_URL=
SEARCH_SERVICE_URL=
LEGACY_SERVICE_URL=

# Docker Registry
DOCKER_REGISTRY=
DOCKERHUB_USERNAME=
DOCKERHUB_TOKEN=

# Deployment
RENDER_API_KEY=
RENDER_SERVICE_ID=
VERCEL_TOKEN=
VERCEL_ORG_ID=
VERCEL_PROJECT_ID=

# PostgreSQL
# POSTGRES_USER=postgres
# POSTGRES_PASSWORD=password
# POSTGRES_DB=shopdb

# Stripe
# STRIPE_SECRET_KEY=sk_test_your_key_here

# ASP.NET (override trong service nếu cần)
ASPNETCORE_ENVIRONMENT=

# Redis
REDIS_HOST=
REDIS_PORT=

# RabbitMQ
RABBITMQ_HOST=
RABBITMQ_PORT=

# Seq
SEQ_URL=
