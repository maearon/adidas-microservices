environment:
  dotenv: true
  
http:
  port: 9000

  middleware:
    cors:
      - name: cors
        action:
          origin:
          - https://adidas-mocha.vercel.app
          - http://localhost:3001
          - https://ruby-rails-boilerplate-3s9t.onrender.com
          - http://localhost:3000
          methods:
            - GET
            - POST
            - PUT
            - DELETE
            - OPTIONS
          headers:
            - Content-Type
            - Authorization
          credentials: true
        enabled: true

apiEndpoints:
  up:
    path: /up
    target: http://api-ruby:3000
  
  oauth:
    path: /api/oauth*
    target: http://api-java:8080

  check-email:
    path: /api/check-email
    target: http://api-java:8080

  login:
    path: /api/login
    target: http://api-java:8080

  signup:
    path: /api/signup
    target: http://api-java:8080

  logout:
    path: /api/logout
    target: http://api-java:8080

  sessions:
    path: /api/sessions
    target: http://api-java:8080

  refresh:
    path: /api/refresh
    target: http://api-java:8080

  revoke:
    path: /api/revoke
    target: http://api-java:8080

  products:
    path: /api/products*
    target: http://api-ruby:3000

  cart:
    path: /api/cart*
    target: http://api-ruby:3000

  wish:
    path: /api/wish*
    target: http://api-ruby:3000

  orders:
    path: /api/orders*
    target: http://api-ruby:3000

  search-products:
    path: /search/products*
    target: http://api-python:8000

  search-suggestions:
    path: /search/suggestions*
    target: http://api-python:8000

  payments:
    path: /api/payments*
    target: http://payments:3003

serviceEndpoints:
  api-csharp:
    url: ${API_CSHARP_URL:-http://api-csharp}

  api-java:
    url: ${API_JAVA_URL:-http://api-java:8080}

  api-ruby:
    url: ${API_RUBY_URL:-http://api-ruby:3000}

  api-python:
    url: ${API_PYTHON_URL:-http://api-python:8000}

  payments:
    url: ${PAYMENTS_URL:-http://payments:3003}

policies:
  - proxy

pipelines:
  up-pipeline:
    apiEndpoints:
      - up
    policies:
      - proxy:
          - action:
              serviceEndpoint: api-ruby
  oauth-pipeline:
    apiEndpoints:
      - oauth
    policies:
      - proxy:
          - action:
              serviceEndpoint: api-java
  check-email-pipeline:
    apiEndpoints:
      - check-email
    policies:
      - proxy:
          - action:
              serviceEndpoint: api-java
  login-pipeline:
    apiEndpoints:
      - login
    policies:
      - proxy:
          - action:
              serviceEndpoint: api-java
  signup-pipeline:
    apiEndpoints:
      - signup
    policies:
      - proxy:
          - action:
              serviceEndpoint: api-java
  logout-pipeline:
    apiEndpoints:
      - logout
    policies:
      - proxy:
          - action:
              serviceEndpoint: api-java
  sessions-pipeline:
    apiEndpoints:
      - sessions
    policies:
      - proxy:
          - action:
              serviceEndpoint: api-java
  refresh-pipeline:
    apiEndpoints:
      - refresh
    policies:
      - proxy:
          - action:
              serviceEndpoint: api-java
  revoke-pipeline:
    apiEndpoints:
      - revoke
    policies:
      - proxy:
          - action:
              serviceEndpoint: api-java
  products-pipeline:
    apiEndpoints:
      - products
    policies:
      - proxy:
          - action:
              serviceEndpoint: api-ruby
  cart-pipeline:
    apiEndpoints:
      - cart
    policies:
      - proxy:
          - action:
              serviceEndpoint: api-ruby
  wish-pipeline:
    apiEndpoints:
      - wish
    policies:
      - proxy:
          - action:
              serviceEndpoint: api-ruby
  orders-pipeline:
    apiEndpoints:
      - orders        
    policies:
      - proxy:
          - action:
              serviceEndpoint: api-ruby
  search-products-pipeline:
    apiEndpoints:
      - search-products
    policies:
      - proxy:
          - action:
              serviceEndpoint: api-python
  search-suggestions-pipeline:
    apiEndpoints:
      - search-suggestions
    policies:
      - proxy:
          - action:
              serviceEndpoint: api-python
  payments-pipeline:
    apiEndpoints:
      - payments
    policies:
      - proxy:
          - action:
              serviceEndpoint: payments
